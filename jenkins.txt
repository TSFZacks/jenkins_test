pipeline {
    agent any
    stages {
        stage('Clean and Prepare Workspace') {
            steps {
                script {
                    sh '''
                        echo "Apagando todos os arquivos do diretório atual..."
                        rm -rf .[!.]* * || true  # Remove todos os arquivos, incluindo ocultos (exceto . e ..)

                        echo "Clonando o repositório mais recente do GitHub..."
                        git clone https://github.com/TSFZacks/jenkins_test.git .

                        echo "Baixando o arquivo script.py..."
                        wget -O /var/lib/jenkins/workspace/Teste-Webhooks@2/script.py https://raw.githubusercontent.com/TSFZacks/jenkins_test/main/script.py

                        echo "Verificando o conteúdo do diretório após a clonagem:"
                        pwd  # Mostra o caminho do diretório atual
                        ls -la  # Lista todos os arquivos no diretório atual
                        
                        echo "Conteúdo do script.py após o download:"
                        cat /var/lib/jenkins/workspace/Teste-Webhooks@2/script.py || echo "script.py não encontrado!"  # Verifica se script.py está presente e exibe seu conteúdo
                    '''
                }
            }
        }

        stage('Build and Run in Docker') {
            agent {
                docker {
                    image 'python:3.9-slim'
                    args '-v /opt/chrome:/opt/chrome -v /opt/chromedriver:/opt/chromedriver --user=root'
                }
            }
            steps {
                script {
                    sh '''
                        echo "Listando arquivos no diretório de trabalho após o clone:"
                        ls -la

                        # Instalar dependências necessárias
                        apt-get update && apt-get install -y wget unzip libglib2.0-0 libnss3 libgconf-2-4 libfontconfig1 libxss1 libxtst6 libasound2 libgbm1 libx11-xcb1 libatk1.0-0 libpangocairo-1.0-0 libgtk-3-0 && rm -rf /var/lib/apt/lists/*

                        # Instalar Chrome e Chromedriver
                        wget -O chrome-linux64.zip https://storage.googleapis.com/chrome-for-testing-public/130.0.6723.6/linux64/chrome-linux64.zip && \
                        unzip -o chrome-linux64.zip -d /opt/chrome && rm chrome-linux64.zip

                        wget -O chromedriver-linux64.zip https://edgedl.me.gvt1.com/edgedl/chrome/chrome-for-testing/130.0.6723.6/linux64/chromedriver-linux64.zip && \
                        unzip -o chromedriver-linux64.zip -d /opt/chromedriver && \
                        rm chromedriver-linux64.zip && chmod +x /opt/chromedriver/chromedriver-linux64/chromedriver

                        # Adicionar Chromedriver ao PATH
                        export PATH=$PATH:/opt/chromedriver/chromedriver-linux64

                        # Verificar se o Chrome e o Chromedriver estão no caminho correto
                        echo "Verificando Chrome e Chromedriver:"
                        /opt/chrome/chrome-linux64/chrome --version
                        /opt/chromedriver/chromedriver-linux64/chromedriver --version

                        # Instalar Selenium
                        pip install --user selenium

                        # Verificar novamente o diretório atual
                        echo "Verificando diretório novamente após instalações:"
                        ls -la

                        # Executar o script Python
                        echo "Executando script.py:"
                        python /var/lib/jenkins/workspace/Teste-Webhooks@2/script.py || echo "Erro: script.py não encontrado no diretório /var/lib/jenkins/workspace/Teste-Webhooks@2/"
                    '''
                }
            }
        }
    }
}
